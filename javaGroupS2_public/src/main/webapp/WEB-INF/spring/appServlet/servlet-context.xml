<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- <resources mapping="/resources/**" location="/resources/" /> -->
	<resources mapping="/js/**" location="/resources/js/" /><!--마지막에 / 꼭있어야 한다 없으면 에러남  -->
	<resources mapping="/css/**" location="/resources/css/" />
	<resources mapping="/images/**" location="/resources/images/" />
	<resources mapping="/data/**" location="/resources/data/" /><!--사진-->
	<resources mapping="/member/**" location="/resources/data/member/" />
	<resources mapping="/ckeditor/**" location="/resources/ckeditor/" />
	<!-- <resources mapping="/board/**" location="/resources/data/board/" /> -->
	<resources mapping="/noticeBoard/**" location="/resources/data/board/noticeBoard/" />
	<resources mapping="/fileUpload/**" location="/resources/data/fileUpload/" />
	<resources mapping="/pageImg/**" location="/resources/data/pageImg/" />
	<resources mapping="/product/**" location="/resources/data/product/" />
	<resources mapping="/kakao/**" location="/resources/images/kakao/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!--JSP 매핑하는 뷰 리졸버  -->
	<!--만약 타일즈를 쓰면 타일즈가 우선순위가 더 높도록 order를 줘야한다  -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 컴포넌트들을 어디서 찾을건지 등록된 애들을 여기서 검색해라 -->
	<!-- 큰 프로젝트에선 이걸 빼고 딱 필요한 부분만 검색하도록 해둔다 -->
	<context:component-scan base-package="com.spring.javaGroupS2" />
	
	<!--파일 업로드에 필요한 라이브러리 객체 bean 등록(최대 저장 용량 제한, 한글처리)-->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	<!--이건 20mb 만약 이거 이상을 넣는다면 여기서 걸린다  -->
		<beans:property name="maxUploadSize" value="20971520" /> <!--세터명-->
		<beans:property name="defaultEncoding" value="utf-8" />
	</beans:bean>
	
	<!--스프링 시큐리티의 디크립스 스크립트 엔코더를 스프링 컨테이너에 빈으로 등록하여 사용  -->
	<beans:bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
		
	<!--트랜잭션(xml, 어노테이션 둘다 가능)을 어노테이션으로 처리하기 위한 클래스 등록(서블릿에 올린다) -->
	<tx:annotation-driven transaction-manager="transactionManager" /><!--라이브러리를 등록해놔서 자동완성뜬다 -->
	
</beans:beans>
